const form=$(".main-form"),textInp=$("#textInp"),signatureOutput=$("#signatureOutput"),verifyBtn=$("#verifyBtn"),valid=$("#validation"),generateBtn=$("#generateBtn"),alert=$(".alert");$(document).ready(()=>{form.on("submit",function(e){verifyBtn.prop("disabled",!0),alert.removeClass("alert-warning alert-success show").addClass("visually-hidden"),e.preventDefault();let t=textInp.val(),a=new TextEncoder().encode(t);crypto.subtle.generateKey({name:"RSA-PSS",modulusLength:4096,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]).then(e=>{crypto.subtle.sign({name:"RSA-PSS",saltLength:32},e.privateKey,a).then(t=>{let n=Array.from(new Uint8Array(t)).map(e=>e.toString(16).padStart(2,"0")).join("");signatureOutput.val(n),verifyBtn.prop("disabled",!1),verifyBtn.on("click",()=>{let t=signatureOutput.val(),n=new Uint8Array(t.match(/.{1,2}/g).map(e=>parseInt(e,16)));crypto.subtle.verify({name:"RSA-PSS",saltLength:32},e.publicKey,n,a).then(e=>{e?(alert.removeClass("visually-hidden alert-warning").addClass("show alert-success"),alert.html("<strong>Success</strong><br>Signature is valid")):(alert.removeClass("visually-hidden alert-success").addClass("show alert-warning"),alert.html("<strong>Warning</strong><br>Signature is invalid"))})})})})})});
